%SAMPLE SUPPLY PROCESS 

input_states_names = ["Goods Request", "Inventory Checked", "Order Sent", "Packing Slip", "Packing Slip Record", "Order Reviewed/approved", "Funds Reserved", "Invoice", "Invoice Record", "Funds Released", "Order Completed", "Order Created", "Order Reprocessed"]; 
% order is significant! Indexes are later used in the following arrays.
input_tasks_names = ["Check Inventory", "Receive Packing Slip", "Record Packing Slip", "Reserve Funds", "Receive Invoice", "Record Invoice", "Release Funds", "Issue Payment", "Create Order", "Reprocess Order", "Approve Order", "Send Order"];   
% order is significant! Indexes are later used in the following arrays.

% for every task we specify, what it requires, size of the list should be equal to amount of tasks x amount of states (1- required, 0-forbidden, -1-doesn't matter)
input_tasks_conditions = [  
% GR  IC  OS  PS PSR ORv FRv   I  IR FRl OCo OCr ORe
   1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, % Check Inventory
   1,  1,  1,  0,  0,  1, -1, -1, -1, -1,  0,  1, -1, % Receive Packing Slip
   1,  1,  1,  1,  0,  1, -1, -1, -1, -1,  0,  1, -1, % Record Packing Slip
   1,  1,  0, -1, -1,  1,  0,  0,  0,  0,  0,  1, -1, % Reserve Funds
   1,  1,  1, -1, -1,  1,  1,  0,  0,  0,  0,  1, -1, % Receive Invoice
   1,  1,  1, -1, -1,  1,  1,  1,  0,  0,  0,  1, -1, % Record Invoice
   1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1, -1, % Release Funds
   1,  1,  1, -1, -1, -1,  1,  1,  1,  1,  0,  1, -1, % Issue Payment
   1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, % Create Order
   1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0, % Reprocess Order
   1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1, % Approve Order
   1,  1,  0,  0,  0,  1,  1,  0,  0,  0,  0,  1, -1  % Send Order
  ]; % end

% for every task we specify, what is its effect, size of the list should be equal to amount of tasks x amount of states
input_tasks_effects = [ 
% task adds state (1 at the third position), doesn't change any other state (-1), 0 would indicate that task removes the state
% GR  IC  OS  PS PSR ORv  FRv   I  IR FRl OCo OCr ORe
  -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, % Check Inventory
  -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, % Receive Packing Slip
  -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, % Record Packing Slip
  -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, % Reserve Funds
  -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, % Receive Invoice
  -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, % Record Invoice
  -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, % Release Funds
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, % Issue Payment
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, % Create Order
  -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1,  1, % Reprocess Order
  -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  0, % Approve Order
  -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1  % Send Order
  ]; % end

% what is the starting state of the process?
% A = not present, B = not present, C = present, S = not present 
% You can't use the -1 here, state has to properly defined
%                      GR  IC  OS  PS PSR ORv  FRv   I  IR FRl OCo OCr ORe
input_initial_state = [ 1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0];

% what is the goal of the process?
% A = doesn't matter, B = doesn't matter, C = has to be present, S = doesn't matter
%                   GR  IC  OS  PS PSR ORv  FRv   I  IR FRl OCo OCr ORe
input_goal_state = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, %goal
                    -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]; %error
                  
%what is the maximum execution number of a task (0 - unlimited)
input_tasks_executions = [
 1, % Check Inventory
 1, % Receive Packing Slip
 1, % Record Packing Slip
 1, % Reserve Funds
 1, % Receive Invoice
 1, % Record Invoice
 1, % Release Funds
 1, % Issue Payment
 1, % Create Order
 1, % Reprocess Order
 2, % Approve Order
 1, % Send Order
  ]; % end